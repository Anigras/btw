#! /usr/bin/python3
# -*- python -*-
# -*- coding: utf-8 -*-



import logging
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import ReplyKeyboardRemove, ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton


API_TOKEN = '1309274489:AAH1_2ATQJ1B7N6vDTDDzpf_76UuIGp9q30'


logging.basicConfig(level=logging.INFO)


bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

@dp.message_handler(commands=["help"])
async def cmd_start(message: types.Message):
    poll_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    poll_keyboard.add(types.KeyboardButton(text="/dz"))
    poll_keyboard.add(types.KeyboardButton(text="/kr"))
    poll_keyboard.add(types.KeyboardButton(text="/x"))
    poll_keyboard.add(types.KeyboardButton(text="–û—Ç–º–µ–Ω–∞"))
    poll_keyboard.add(types.KeyboardButton(text="–Ø —É–∑–Ω–∞–ª –≤—Å–µ —á—Ç–æ –Ω–∞–¥–æ"))
    await message.answer("–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—É—é –∫–æ–º–∞–Ω–¥—É", reply_markup=poll_keyboard)

@dp.message_handler(lambda message: message.text == "–û—Ç–º–µ–Ω–∞")
async def action_cancel(message: types.Message):
    remove_keyboard = types.ReplyKeyboardRemove()
    await message.answer("–ù–µ —Ö–æ—á–µ—à—å —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞—Ç—å –Ω—É –∏ –Ω–µ –Ω–∞–¥–æ!!!!      (Ôºõ‚å£ÃÄ_‚å£ÃÅ)", reply_markup=remove_keyboard)


@dp.message_handler(lambda message: message.text == "–Ø —É–∑–Ω–∞–ª –≤—Å–µ —á—Ç–æ –Ω–∞–¥–æ")
async def action_cancel(message: types.Message):
    remove_keyboard = types.ReplyKeyboardRemove()
    await message.answer("–ú–æ–ª–æ–¥–µ—Ü))   „ÉΩ(„Éª‚àÄ„Éª)Ôæâ", reply_markup=remove_keyboard)

@dp.message_handler(commands=['Dz',])
async def send_welcome(message: types.Message):

    await message.reply("Hi!\n–ì–µ–æ–≥—Ä–∞—Ñ–∏—è:(classroom)\n–ê–ª–≥–µ–±—Ä–∞(–ª):\n–ê–ª–≥–µ–±–∞(–ø—Ä):\n–ì–µ–æ–º–µ—Ç—Ä–∏—è(–ª):\n–ì–µ–æ–º–µ—Ç—Ä–∏—è(–ø—Ä):\n–ú–∞—Ç.–∞–Ω–∞–ª–∏–∑(–ª):\n–ú–∞—Ç.–∞–Ω–∞–ª–∏–∑(–ø—Ä): \n–§–∏–∑–∏–∫–∞: –≤–ø—Ä–∞–≤–∞ 8\n–ó–∞—Ä.–ª–∏—Ç:—Å—Ç.53-65;53,57-58;53-55,59\n–£–∫—Ä.–ª–∏—Ç:\n–ò—Å—Ç–æ—Ä–∏—è –≤—Å–µ—Å:\n–ò—Å—Ç–æ—Ä–∏—è –£–∫—Ä.:\n–£–∫—Ä.–º–æ–≤–∞: \n–ë–∏–æ–ª–æ–≥–∏—è:\n–ò–Ω—Ñ–∞:\n–•–∏–º–∏—è:\n–ú–∏—Å—Ç.:\n–ê–Ω–≥–ª.–º–æ–≤–∞:")


@dp.message_handler(commands=['kr'])
async def cats(message: types.Message):
    
        await message.reply("–ü–Ω:\nùí©ùëú\n–í—Ç:\nùí©ùëú\n–°—Ä:–î–∏–∫—Ç–∞–Ω—Ç –ø–æ –∞–Ω–≥–ª;–û–ª–∏–º–ø–∏–∞–¥–∞ –ø–æ —Ñ–∏–∑–∏–∫–µ\nùí©ùëú\n–ß—Ç:\nùí©ùëú\n–ü—Ç:\nùí©ùëú\n–°–±:\nùí©ùëú")


@dp.message_handler(commands=['–ü–∞—à–∞'])
async def cats(message: types.Message):
    
        await message.reply("–ë–∞–∫–∞")

@dp.message_handler(commands=['–î–∞–Ω–∏–∏–ª'])
async def cats(message: types.Message):
    
        await message.reply("–°–µ–º–ø–∞–π –ü–∏–Ω–∫–∏")

@dp.message_handler(commands=['–§–∏–Ω–∏–∫'])
async def cats(message: types.Message):
    
        await message.reply("47 —Ö—Ä–æ–º–æ—Å–æ–º–∏–∫")

@dp.message_handler(commands=['–ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞'])
async def cats(message: types.Message):
    
        await message.reply("–•–ó–•–ó–•–ó–•–•–ó–•–ó–•–ó")

@dp.message_handler(commands=['–ì—É—Å—å'])
async def cats(message: types.Message):
    
        await message.reply("–ì—É—Å—å")

@dp.message_handler(commands=['–ö–ö'])
async def cats(message: types.Message):
    
        await message.reply("–ù—É —Ç–∏–ø–æ –±—Ä–∞—Ç")

@dp.message_handler(commands=['–ö–î'])
async def cats(message: types.Message):
    
        await message.reply("–ù—É —Ç–∏–ø–æ –±—Ä–∞—Ç –±—Ä–∞—Ç–∞")

@dp.message_handler(commands=['–†–∞–¥–∏–∞—Ç–æ—Ä'])
async def cats(message: types.Message):
    
        await message.reply("–ü—Ä–∏–Ω—Ü–µ—Å–∞")

@dp.message_handler(commands=['–ï—Å–µ–Ω–∏—è'])
async def cats(message: types.Message):
    
        await message.reply("—Ç–∏–ø–∞ —Ç—É–ø–∞—è")

@dp.message_handler(commands=['–°–æ–Ω—è'])
async def cats(message: types.Message):
    
        await message.reply("–•–æ–¥—è—á–∞—è –≤–∏–∫–∏–ø–µ–¥–∏—è")

@dp.message_handler(commands=['–ê–Ω—Ç–æ–Ω'])
async def cats(message: types.Message):
    
        await message.reply("–ê–ù–¢–û–ù –°–ê–ú –ü–†–ò–î–£–ú–ê–ô –Ø –•–ó –ß–¢–û –ü–ò–°–ê–¢–¨")

@dp.message_handler(commands=['–ï–≤–∞'])
async def cats(message: types.Message):
    
        await message.reply("–•–∑ —á—Ç–æ –Ω–∞–ø–∏—Å–∞—Ç—å,–Ω–æ —Ä–∏—Å—É–µ—Ç –Ω–∞ —Ç–µ—Ç—Ä–∞–¥–∫–µ")

@dp.message_handler(commands=['–í–∏–∫–∞'])
async def cats(message: types.Message):
    
        await message.reply("–í–µ—Å—Ç–Ω–∏–∫")

@dp.message_handler(commands=['–°–æ—Ñ–∞'])
async def cats(message: types.Message):
    
        await message.reply("–•–∑ —á–µ –ø–∏—Å–∞—Ç—å")

@dp.message_handler(commands=['–ü–µ–≤–µ—Ü'])
async def cats(message: types.Message):
    
        await message.reply("–ú–∞–ª–µ–Ω—å–∫–∏–π –ø–æ–∑–¥—é–∫")

@dp.message_handler(commands=['x'])
async def cats(message: types.Message):
    
        await message.reply("–ö–ö\n–ö–î\n–§–∏–Ω–∏–∫\n–í–∏–∫–∞\n–ü–µ–≤–µ—Ü\n–°–æ—Ñ–∞\n–ï–≤–∞\n–ê–Ω—Ç–æ–Ω\n–°–æ–Ω—è\n–ï—Å–µ–Ω–∏—è\n–†–∞–¥–∏–∞—Ç–æ—Ä\n–ì—É—Å—å\n–ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞\n–î–∞–Ω–∏–∏–ª\n–ü–∞—à–∞")

@dp.message_handler(regexp='(^cat[s]?$|puss)')
async def cats(message: types.Message):
    with open('data/cats.jpg', 'rb') as photo:
    

        await message.reply_photo(photo, caption='Cats are here üò∫')




if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)